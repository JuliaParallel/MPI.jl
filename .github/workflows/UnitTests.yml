name: Unit Tests

on:
  pull_request:

  push:
    branches:
      - master

jobs:
  test-jll:
    timeout-minutes: 120
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        julia_version: ["1.3", "1.4", "1.5", "nightly"]
        julia_arch: [x64, x86]
        exclude:
          - os: macOS-latest
            julia_arch: x86
        include:
          - os: macos-latest
            mpiexec_args: "-host localhost"

      fail-fast: false

    runs-on: ${{ matrix.os }}
    env:
      MPICH_INTERFACE_HOSTNAME: localhost
      JULIA_MPIEXEC_ARGS: ${{ matrix.mpiexec_args }}

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout
      uses: actions/checkout@v2.2.0

    - uses: julia-actions/setup-julia@latest
      with:
        arch: ${{ matrix.julia_arch }}
        version: ${{ matrix.julia_version }}

    # https://discourse.julialang.org/t/recommendation-cache-julia-artifacts-in-ci-services/35484
    - name: Cache artifacts
      uses: actions/cache@v1
      env:
        cache-name: cache-artifacts
      with:
        path: ~/.julia/artifacts
        key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ env.cache-name }}-
          ${{ runner.os }}-test-
          ${{ runner.os }}-

    - uses: julia-actions/julia-buildpkg@latest
    - uses: julia-actions/julia-runtest@latest

  test-system-brew:
    timeout-minutes: 120
    strategy:
      matrix:
        mpi: [mpich, openmpi]
        mpi_abi: ["", "unknown"]
        julia_version: ["1.5", "nightly"]

      fail-fast: false

    runs-on: macos-latest

    env:
      JULIA_MPI_BINARY: system
      JULIA_MPI_PATH: /usr/local
      JULIA_MPI_ABI: ${{ matrix.mpi_abi }}

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout
      uses: actions/checkout@v2.2.0

    - name: Install MPI via homebrew
      run: brew install $MPI
      env:
        MPI: ${{ matrix.mpi }}

    - uses: julia-actions/setup-julia@latest
      with:
        version: ${{ matrix.julia_version }}

    # https://discourse.julialang.org/t/recommendation-cache-julia-artifacts-in-ci-services/35484
    - name: Cache artifacts
      uses: actions/cache@v1
      env:
        cache-name: cache-artifacts
      with:
        path: ~/.julia/artifacts
        key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ env.cache-name }}-
          ${{ runner.os }}-test-
          ${{ runner.os }}-

    - uses: julia-actions/julia-buildpkg@latest
    - uses: julia-actions/julia-runtest@latest


  test-system-apt:
    timeout-minutes: 120
    strategy:
      matrix:
        mpi: [mpich, libopenmpi-dev]
        mpi_abi: ["", "unknown"]
        julia_version: ["1.5", "nightly"]

      fail-fast: false

    runs-on: ubuntu-20.04

    env:
      JULIA_MPI_BINARY: system
      JULIA_MPI_ABI: ${{ matrix.mpi_abi }}
      OMPI_MCA_btl_base_warn_component_unused: 0

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout
      uses: actions/checkout@v2.2.0

    - name: Install MPI via apt
      run: sudo apt-get install $MPI
      env:
        MPI: ${{ matrix.mpi }}

    - uses: julia-actions/setup-julia@latest
      with:
        version: ${{ matrix.julia_version }}

    # https://discourse.julialang.org/t/recommendation-cache-julia-artifacts-in-ci-services/35484
    - name: Cache artifacts
      uses: actions/cache@v1
      env:
        cache-name: cache-artifacts
      with:
        path: ~/.julia/artifacts
        key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ env.cache-name }}-
          ${{ runner.os }}-test-
          ${{ runner.os }}-

    - uses: julia-actions/julia-buildpkg@latest
    - uses: julia-actions/julia-runtest@latest

  test-system-msmpi:
    timeout-minutes: 120
    strategy:
      matrix:
        julia_version: ["1.5", "nightly"]

      fail-fast: false

    runs-on: windows-latest

    env:
      JULIA_MPI_BINARY: system
      JULIA_MPIEXEC: "C:\\Program Files\\Microsoft MPI\\Bin\\mpiexec"

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout
      uses: actions/checkout@v2.2.0

    - name: Download Microsoft MPI
      run: (new-object net.webclient).DownloadFile("https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe", "msmpisetup.exe")
      shell: powershell

    - name: Install Microsoft MPI
      run: msmpisetup.exe -unattend -minimal
      shell: cmd

    - uses: julia-actions/setup-julia@latest
      with:
        version: ${{ matrix.julia_version }}

    # https://discourse.julialang.org/t/recommendation-cache-julia-artifacts-in-ci-services/35484
    - name: Cache artifacts
      uses: actions/cache@v1
      env:
        cache-name: cache-artifacts
      with:
        path: ~/.julia/artifacts
        key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ env.cache-name }}-
          ${{ runner.os }}-test-
          ${{ runner.os }}-

    - uses: julia-actions/julia-buildpkg@latest
    - uses: julia-actions/julia-runtest@latest
