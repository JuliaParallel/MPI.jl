#!/usr/bin/env julia
# -*- julia -*-
#
# Copyright (C) 2020 Mos√® Giordano
# License is MIT "Expat"
#
### Commentary:
#
# Command line utility to call the `mpiexec` binary used by the `MPI.jl` version
# in the given Julia project.  It has the same syntax as the `mpiexec` binary
# that would be called, with the additional `--project=...` to select a
# different Julia project.
#
# Examples of usage (the MPI flags available depend on the MPI implementation
# called):
#
#   $ mpiexecjl --version
#   $ mpiexecjl -n 40 mpi-script.jl
#   $ mpiexecjl --project=my_experiment -n 80 --oversubscribe mpi-script.jl
#
### Code:

# From BinaryBuilder.jl
function extract_flag(ARGS, flag, val = "")
    flag_args = String[]
    other_args = String[]
    for f in ARGS
        if startswith(flag, f)
            push!(flag_args, f)
        else
            push!(other_args, f)
        end
    end
    return (flag_args, other_args)
end

project_args, _ARGS = extract_flag(ARGS, "--project")

const script = raw"""
    using MPI
    ENV["JULIA_PROJECT"] = dirname(Base.active_project())
    mpiexec() do exe
        run(`$exe $ARGS`)
    end
    """

run(`$(joinpath(Sys.BINDIR, Base.julia_exename())) --color=yes --startup-file=no -q --compile=min -O0 $(project_args) -e $(script) -- $(_ARGS)`)
