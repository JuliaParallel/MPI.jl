#!/bin/sh
#
# Copyright (C) 2020 Simon Byrne, MosÃ¨ Giordano
# License is MIT "Expat"
#
### Commentary:
#
# Command line utility to call the `mpiexec` binary used by the `MPI.jl` version
# in the given Julia project.  It has the same syntax as the `mpiexec` binary
# that would be called, with the additional `--project=...` flag to select a
# different Julia project.
#
# Examples of usage (the MPI flags available depend on the MPI implementation
# called):
#
#   $ mpiexecjl --version
#   $ mpiexecjl -n 40 julia mpi-script.jl
#   $ mpiexecjl --project=my_experiment -n 80 --oversubscribe mpi-script.jl
#
### Code:

for arg; do
    shift
    case "${arg}" in
        --project | --project=*)
            PROJECT_ARG="${arg}"
            ;;
        *)
            set -- "${@}" "${arg}"
            ;;
    esac
done

SCRIPT='
using MPI
ENV["JULIA_PROJECT"] = dirname(Base.active_project())
mpiexec(exe -> run(`$exe $ARGS`))'

case "${PROJECT_ARG}" in
    --project*)
        julia "${PROJECT_ARG}" --color=yes --startup-file=no -q --compile=min -O0 -e "${SCRIPT}" -- "${@}"
        ;;
    *)
        julia --color=yes --startup-file=no -q --compile=min -O0 -e "${SCRIPT}" -- "${@}"
        ;;
esac
